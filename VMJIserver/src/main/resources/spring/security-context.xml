<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security	
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">
       
    <bean id="authenticationSuccessHandler" class="mainPackage.AuthSuccessHandler" />
 
    <sec:http pattern="/resources/**" security="none"/>
    <sec:http auto-config="true" >
        <!-- 認可の設定 -->
        <sec:intercept-url pattern="/top" access="permitAll" />
        <sec:intercept-url pattern="/user" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <sec:intercept-url pattern="/guestos" access="hasRole('ROLE_ADMIN')" />
        <sec:intercept-url pattern="/hostos" access="hasRole('ROLE_ADMIN')" />
         
        <!-- 権限なし時の遷移先 -->
        <sec:access-denied-handler error-page="/403" />
         
        <!-- 認証のログイン処理 -->
        <sec:form-login
            login-page="/top"
            authentication-success-handler-ref="authenticationSuccessHandler"
            default-target-url="/guestos"
            authentication-failure-url="/top"
            login-processing-url="/auth"/>
         
        <!-- 認証のログアウト処理 -->
        <sec:logout
            logout-url="/logout"
            logout-success-url="/top"
            invalidate-session="true"/>
        <!-- anonymousユーザのROLE -->
        <sec:anonymous granted-authority="ROLE_ANONYMOUS" />
    </sec:http>
  
   <sec:authentication-manager alias="authenticationManager">
     <sec:authentication-provider>
      <!-- SQLでユーザ情報取得 -->
      <sec:jdbc-user-service
        data-source-ref="dataSource"
        users-by-username-query="
            select 
                LoginId as username, pgp_sym_decrypt(Password, 'TnmKFq3LzD!g') as password, true as enabled 
            from 
                M_User 
            where 
                LoginId=?"
        authorities-by-username-query="
            select 
                LoginId as username,
                case when AdminFlag = '0' then 'ROLE_USER'
                when AdminFlag = '1' then 'ROLE_ADMIN'
                else 'ROLE_USER' end as authority 
            from 
                M_User 
            where 
                LoginId=?"/>
     </sec:authentication-provider>
   </sec:authentication-manager>
 
</beans>